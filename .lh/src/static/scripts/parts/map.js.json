{
    "sourceFile": "src/static/scripts/parts/map.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1623940214891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1623940225082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,168 @@\n+// console.log(\"Файл map.scss подключен\");\r\n+\r\n+// document.querySelector('.btn').onclick = loader;\r\n+\r\n+/*====================================\r\n+*     Yandex Map\r\n+======================================*/\r\n+// Функция ymaps.ready() будет вызвана, когда\r\n+// загрузятся все компоненты API, а также когда будет готово DOM-дерево.\r\n+// const x = [{\r\n+//         title: \"Хьюстон\",\r\n+//         lat: 29.766892,\r\n+//         lon: -95.342553\r\n+//     },\r\n+//     {\r\n+//         title: \"Ноябрьск\",\r\n+//         lat: 63.189667,\r\n+//         lon: 75.461747\r\n+//     },\r\n+//     {\r\n+//         title: \"Москва\",\r\n+//         lat: 55.661574,\r\n+//         lon: 37.573856\r\n+//     },\r\n+// ];\r\n+// const y = [\r\n+//       {\r\n+//           \"lat\": 63.197546,\r\n+//           \"lon\": 75.511242,\r\n+//       }\r\n+//   ]\r\n+// ;\r\n+\r\n+const mapInit = (data) =>\r\n+  $(document).ready(function () {\r\n+    // Проверка наличия карты на странице\r\n+    const isMapContainer = $(\"div\").is(\"#map\");\r\n+    \r\n+\r\n+    if (isMapContainer) {\r\n+      console.log(\"Нашел контейнер\", \"#map\");\r\n+      ymaps.ready(init);\r\n+\r\n+      function init() {\r\n+        // Создание карты.\r\n+        var myMap = new ymaps.Map(\"map\", {\r\n+          // Координаты центра карты.\r\n+          // Порядок по умолчанию: «широта, долгота».\r\n+          // Чтобы не определять координаты центра карты вручную,\r\n+          // воспользуйтесь инструментом Определение координат.\r\n+          center: [35.0, 10.0],\r\n+          // Уровень масштабирования. Допустимые значения:\r\n+          // от 0 (весь мир) до 19.\r\n+          zoom: 1.5,\r\n+          maxZoom: 1,\r\n+\r\n+          type: \"yandex#satellite\",\r\n+\r\n+          controls: [],\r\n+        }, {\r\n+          // Зададим ограниченную область прямоугольником,           \r\n+          restrictMapArea: [\r\n+              [85.000000, -179.000000],\r\n+              [-85.000000, 179.000000]\r\n+          ]\r\n+        });\r\n+\r\n+        data.forEach((element) => {\r\n+          console.log(element, \"element\");\r\n+          myMap.geoObjects.add(\r\n+            new ymaps.Placemark(\r\n+              [element.lat, element.lon],\r\n+              {\r\n+                hintContent: element.title,\r\n+              },\r\n+              {                \r\n+                // Необходимо указать данный тип макета.\r\n+                iconLayout: \"default#imageWithContent\",\r\n+                // Своё изображение иконки метки.\r\n+                // iconImageHref: 'assets/icons/placeMark.svg',\r\n+                iconImageHref: \"/static/assets/icons/placeMark.svg\",\r\n+\r\n+                // Размеры метки.\r\n+                iconImageSize: [30, 30],\r\n+                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n+                iconImageOffset: [-15, -15],\r\n+              }\r\n+            )\r\n+          );\r\n+        });\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+const mapSelfInit = (data) =>\r\n+  $(document).ready(function () {\r\n+    // Карта на странице контактов\r\n+    const isMapContacts = $(\"div\").is(\"#mapSelf\");\r\n+\r\n+    if (isMapContacts) {\r\n+      console.log(\"Нашел контейнер\", \"#mapSelf\");\r\n+\r\n+      ymaps.ready(mapSelfInit);\r\n+\r\n+      function mapSelfInit() {\r\n+        // Создание карты.\r\n+        var myMap = new ymaps.Map(\"mapSelf\", {\r\n+          // Координаты центра карты.\r\n+          // Порядок по умолчанию: «широта, долгота».\r\n+          // Чтобы не определять координаты центра карты вручную,\r\n+          // воспользуйтесь инструментом Определение координат.\r\n+          center: [data[0].lat, data[0].lon],\r\n+          // Уровень масштабирования. Допустимые значения:\r\n+          // от 0 (весь мир) до 19.\r\n+          zoom: 17,\r\n+          maxZoom: 1,\r\n+          controls: [],\r\n+        });\r\n+\r\n+        data.forEach((element) => {\r\n+          console.log(element);\r\n+          myMap.geoObjects.add(\r\n+            new ymaps.Placemark(\r\n+              [element.lat, element.lon],\r\n+              {\r\n+                hintContent: element.title,\r\n+              },\r\n+              {\r\n+                // Необходимо указать данный тип макета.\r\n+                iconLayout: \"default#imageWithContent\",\r\n+                // Своё изображение иконки метки.\r\n+                // iconImageHref: 'assets/icons/placeMark2.svg',\r\n+                iconImageHref: \"/static/assets/icons/placeMark2.svg\",\r\n+                // Размеры метки.\r\n+                iconImageSize: [60, 60],\r\n+                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n+                iconImageOffset: [-30, -50],\r\n+              }\r\n+            )\r\n+          );\r\n+        });\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+// mapInit(x);\r\n+\r\n+// mapSelfInit(y);\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+// =================================================================================================================================\r\n+// =================================================================================================================================\r\n+\r\n+function showFile(input) {\r\n+  let file = input.files[0];\r\n+  $(\".header-callback__load-file__desc\").text(`${file.name}`);  \r\n+}\r\n+\r\n+function fileNameClear() {\r\n+  // $(\".header-callback__load-file__desc\").text(`Прикрепить резюме`);  \r\n+  setTimeout($(\".header-callback__load-file__desc\").text(`Прикрепить резюме`), 10);\r\n+}\r\n+\r\n+// const fileNameClearqwqw = setTimeout(fileNameClear, 1000)\r\n+ \n\\ No newline at end of file\n"
                },
                {
                    "date": 1623941394437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,168 @@\n+// console.log(\"Файл map.scss подключен\");\r\n+\r\n+// document.querySelector('.btn').onclick = loader;\r\n+\r\n+/*====================================\r\n+*     Yandex Map\r\n+======================================*/\r\n+// Функция ymaps.ready() будет вызвана, когда\r\n+// загрузятся все компоненты API, а также когда будет готово DOM-дерево.\r\n+// const x = [{\r\n+//         title: \"Хьюстон\",\r\n+//         lat: 29.766892,\r\n+//         lon: -95.342553\r\n+//     },\r\n+//     {\r\n+//         title: \"Ноябрьск\",\r\n+//         lat: 63.189667,\r\n+//         lon: 75.461747\r\n+//     },\r\n+//     {\r\n+//         title: \"Москва\",\r\n+//         lat: 55.661574,\r\n+//         lon: 37.573856\r\n+//     },\r\n+// ];\r\n+// const y = [\r\n+//       {\r\n+//           \"lat\": 63.197546,\r\n+//           \"lon\": 75.511242,\r\n+//       }\r\n+//   ]\r\n+// ;\r\n+\r\n+const mapInit = (data) =>\r\n+  $(document).ready(function () {\r\n+    // Проверка наличия карты на странице\r\n+    const isMapContainer = $(\"div\").is(\"#map\");\r\n+    \r\n+\r\n+    if (isMapContainer) {\r\n+      console.log(\"Нашел контейнер\", \"#map\");\r\n+      ymaps.ready(init);\r\n+\r\n+      function init() {\r\n+        // Создание карты.\r\n+        var myMap = new ymaps.Map(\"map\", {\r\n+          // Координаты центра карты.\r\n+          // Порядок по умолчанию: «широта, долгота».\r\n+          // Чтобы не определять координаты центра карты вручную,\r\n+          // воспользуйтесь инструментом Определение координат.\r\n+          center: [35.0, 10.0],\r\n+          // Уровень масштабирования. Допустимые значения:\r\n+          // от 0 (весь мир) до 19.\r\n+          zoom: 1.5,\r\n+          maxZoom: 1,\r\n+\r\n+          type: \"yandex#satellite\",\r\n+\r\n+          controls: [],\r\n+        }, {\r\n+          // Зададим ограниченную область прямоугольником,           \r\n+          restrictMapArea: [\r\n+              [85.000000, -179.000000],\r\n+              [-85.000000, 179.000000]\r\n+          ]\r\n+        });\r\n+\r\n+        data.forEach((element) => {\r\n+          console.log(element, \"element\");\r\n+          myMap.geoObjects.add(\r\n+            new ymaps.Placemark(\r\n+              [element.lat, element.lon],\r\n+              {\r\n+                hintContent: element.title,\r\n+              },\r\n+              {                \r\n+                // Необходимо указать данный тип макета.\r\n+                iconLayout: \"default#imageWithContent\",\r\n+                // Своё изображение иконки метки.\r\n+                // iconImageHref: 'assets/icons/placeMark.svg',\r\n+                iconImageHref: \"/static/assets/icons/placeMark.svg\",\r\n+\r\n+                // Размеры метки.\r\n+                iconImageSize: [30, 30],\r\n+                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n+                iconImageOffset: [-15, -15],\r\n+              }\r\n+            )\r\n+          );\r\n+        });\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+const mapSelfInit = (data) =>\r\n+  $(document).ready(function () {\r\n+    // Карта на странице контактов\r\n+    const isMapContacts = $(\"div\").is(\"#mapSelf\");\r\n+\r\n+    if (isMapContacts) {\r\n+      console.log(\"Нашел контейнер\", \"#mapSelf\");\r\n+\r\n+      ymaps.ready(mapSelfInit);\r\n+\r\n+      function mapSelfInit() {\r\n+        // Создание карты.\r\n+        var myMap = new ymaps.Map(\"mapSelf\", {\r\n+          // Координаты центра карты.\r\n+          // Порядок по умолчанию: «широта, долгота».\r\n+          // Чтобы не определять координаты центра карты вручную,\r\n+          // воспользуйтесь инструментом Определение координат.\r\n+          center: [data[0].lat, data[0].lon],\r\n+          // Уровень масштабирования. Допустимые значения:\r\n+          // от 0 (весь мир) до 19.\r\n+          zoom: 17,\r\n+          maxZoom: 1,\r\n+          controls: [],\r\n+        });\r\n+\r\n+        data.forEach((element) => {\r\n+          console.log(element);\r\n+          myMap.geoObjects.add(\r\n+            new ymaps.Placemark(\r\n+              [element.lat, element.lon],\r\n+              {\r\n+                hintContent: element.title,\r\n+              },\r\n+              {\r\n+                // Необходимо указать данный тип макета.\r\n+                iconLayout: \"default#imageWithContent\",\r\n+                // Своё изображение иконки метки.\r\n+                // iconImageHref: 'assets/icons/placeMark2.svg',\r\n+                iconImageHref: \"/static/assets/icons/placeMark2.svg\",\r\n+                // Размеры метки.\r\n+                iconImageSize: [60, 60],\r\n+                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n+                iconImageOffset: [-30, -50],\r\n+              }\r\n+            )\r\n+          );\r\n+        });\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+// mapInit(x);\r\n+\r\n+// mapSelfInit(y);\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+// =================================================================================================================================\r\n+// =================================================================================================================================\r\n+\r\n+function showFile(input) {\r\n+  let file = input.files[0];\r\n+  $(\".header-callback__load-file__desc\").text(`${file.name}`);  \r\n+}\r\n+\r\n+function fileNameClear() {\r\n+  const clear = () => $(\".header-callback__load-file__desc\").text(`Прикрепить резюме`);  \r\n+  setTimeout(clear, 2000);\r\n+}\r\n+\r\n+// const fileNameClearqwqw = setTimeout(fileNameClear, 1000)\r\n+ \n\\ No newline at end of file\n"
                },
                {
                    "date": 1623941439324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,168 @@\n+// console.log(\"Файл map.scss подключен\");\r\n+\r\n+// document.querySelector('.btn').onclick = loader;\r\n+\r\n+/*====================================\r\n+*     Yandex Map\r\n+======================================*/\r\n+// Функция ymaps.ready() будет вызвана, когда\r\n+// загрузятся все компоненты API, а также когда будет готово DOM-дерево.\r\n+// const x = [{\r\n+//         title: \"Хьюстон\",\r\n+//         lat: 29.766892,\r\n+//         lon: -95.342553\r\n+//     },\r\n+//     {\r\n+//         title: \"Ноябрьск\",\r\n+//         lat: 63.189667,\r\n+//         lon: 75.461747\r\n+//     },\r\n+//     {\r\n+//         title: \"Москва\",\r\n+//         lat: 55.661574,\r\n+//         lon: 37.573856\r\n+//     },\r\n+// ];\r\n+// const y = [\r\n+//       {\r\n+//           \"lat\": 63.197546,\r\n+//           \"lon\": 75.511242,\r\n+//       }\r\n+//   ]\r\n+// ;\r\n+\r\n+const mapInit = (data) =>\r\n+  $(document).ready(function () {\r\n+    // Проверка наличия карты на странице\r\n+    const isMapContainer = $(\"div\").is(\"#map\");\r\n+    \r\n+\r\n+    if (isMapContainer) {\r\n+      console.log(\"Нашел контейнер\", \"#map\");\r\n+      ymaps.ready(init);\r\n+\r\n+      function init() {\r\n+        // Создание карты.\r\n+        var myMap = new ymaps.Map(\"map\", {\r\n+          // Координаты центра карты.\r\n+          // Порядок по умолчанию: «широта, долгота».\r\n+          // Чтобы не определять координаты центра карты вручную,\r\n+          // воспользуйтесь инструментом Определение координат.\r\n+          center: [35.0, 10.0],\r\n+          // Уровень масштабирования. Допустимые значения:\r\n+          // от 0 (весь мир) до 19.\r\n+          zoom: 1.5,\r\n+          maxZoom: 1,\r\n+\r\n+          type: \"yandex#satellite\",\r\n+\r\n+          controls: [],\r\n+        }, {\r\n+          // Зададим ограниченную область прямоугольником,           \r\n+          restrictMapArea: [\r\n+              [85.000000, -179.000000],\r\n+              [-85.000000, 179.000000]\r\n+          ]\r\n+        });\r\n+\r\n+        data.forEach((element) => {\r\n+          console.log(element, \"element\");\r\n+          myMap.geoObjects.add(\r\n+            new ymaps.Placemark(\r\n+              [element.lat, element.lon],\r\n+              {\r\n+                hintContent: element.title,\r\n+              },\r\n+              {                \r\n+                // Необходимо указать данный тип макета.\r\n+                iconLayout: \"default#imageWithContent\",\r\n+                // Своё изображение иконки метки.\r\n+                // iconImageHref: 'assets/icons/placeMark.svg',\r\n+                iconImageHref: \"/static/assets/icons/placeMark.svg\",\r\n+\r\n+                // Размеры метки.\r\n+                iconImageSize: [30, 30],\r\n+                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n+                iconImageOffset: [-15, -15],\r\n+              }\r\n+            )\r\n+          );\r\n+        });\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+const mapSelfInit = (data) =>\r\n+  $(document).ready(function () {\r\n+    // Карта на странице контактов\r\n+    const isMapContacts = $(\"div\").is(\"#mapSelf\");\r\n+\r\n+    if (isMapContacts) {\r\n+      console.log(\"Нашел контейнер\", \"#mapSelf\");\r\n+\r\n+      ymaps.ready(mapSelfInit);\r\n+\r\n+      function mapSelfInit() {\r\n+        // Создание карты.\r\n+        var myMap = new ymaps.Map(\"mapSelf\", {\r\n+          // Координаты центра карты.\r\n+          // Порядок по умолчанию: «широта, долгота».\r\n+          // Чтобы не определять координаты центра карты вручную,\r\n+          // воспользуйтесь инструментом Определение координат.\r\n+          center: [data[0].lat, data[0].lon],\r\n+          // Уровень масштабирования. Допустимые значения:\r\n+          // от 0 (весь мир) до 19.\r\n+          zoom: 17,\r\n+          maxZoom: 1,\r\n+          controls: [],\r\n+        });\r\n+\r\n+        data.forEach((element) => {\r\n+          console.log(element);\r\n+          myMap.geoObjects.add(\r\n+            new ymaps.Placemark(\r\n+              [element.lat, element.lon],\r\n+              {\r\n+                hintContent: element.title,\r\n+              },\r\n+              {\r\n+                // Необходимо указать данный тип макета.\r\n+                iconLayout: \"default#imageWithContent\",\r\n+                // Своё изображение иконки метки.\r\n+                // iconImageHref: 'assets/icons/placeMark2.svg',\r\n+                iconImageHref: \"/static/assets/icons/placeMark2.svg\",\r\n+                // Размеры метки.\r\n+                iconImageSize: [60, 60],\r\n+                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n+                iconImageOffset: [-30, -50],\r\n+              }\r\n+            )\r\n+          );\r\n+        });\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+// mapInit(x);\r\n+\r\n+// mapSelfInit(y);\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+// =================================================================================================================================\r\n+// =================================================================================================================================\r\n+\r\n+function showFile(input) {\r\n+  let file = input.files[0];\r\n+  $(\".header-callback__load-file__desc\").text(`${file.name}`);  \r\n+}\r\n+\r\n+function fileNameClear() {\r\n+  const clear = () => $(\".header-callback__load-file__desc\").text(`Прикрепить резюме`);  \r\n+  setTimeout(clear, 1000);\r\n+}\r\n+\r\n+// const fileNameClearqwqw = setTimeout(fileNameClear, 1000)\r\n+ \n\\ No newline at end of file\n"
                },
                {
                    "date": 1623941456572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,165 @@\n+// console.log(\"Файл map.scss подключен\");\r\n+\r\n+// document.querySelector('.btn').onclick = loader;\r\n+\r\n+/*====================================\r\n+*     Yandex Map\r\n+======================================*/\r\n+// Функция ymaps.ready() будет вызвана, когда\r\n+// загрузятся все компоненты API, а также когда будет готово DOM-дерево.\r\n+// const x = [{\r\n+//         title: \"Хьюстон\",\r\n+//         lat: 29.766892,\r\n+//         lon: -95.342553\r\n+//     },\r\n+//     {\r\n+//         title: \"Ноябрьск\",\r\n+//         lat: 63.189667,\r\n+//         lon: 75.461747\r\n+//     },\r\n+//     {\r\n+//         title: \"Москва\",\r\n+//         lat: 55.661574,\r\n+//         lon: 37.573856\r\n+//     },\r\n+// ];\r\n+// const y = [\r\n+//       {\r\n+//           \"lat\": 63.197546,\r\n+//           \"lon\": 75.511242,\r\n+//       }\r\n+//   ]\r\n+// ;\r\n+\r\n+const mapInit = (data) =>\r\n+  $(document).ready(function () {\r\n+    // Проверка наличия карты на странице\r\n+    const isMapContainer = $(\"div\").is(\"#map\");\r\n+    \r\n+\r\n+    if (isMapContainer) {\r\n+      console.log(\"Нашел контейнер\", \"#map\");\r\n+      ymaps.ready(init);\r\n+\r\n+      function init() {\r\n+        // Создание карты.\r\n+        var myMap = new ymaps.Map(\"map\", {\r\n+          // Координаты центра карты.\r\n+          // Порядок по умолчанию: «широта, долгота».\r\n+          // Чтобы не определять координаты центра карты вручную,\r\n+          // воспользуйтесь инструментом Определение координат.\r\n+          center: [35.0, 10.0],\r\n+          // Уровень масштабирования. Допустимые значения:\r\n+          // от 0 (весь мир) до 19.\r\n+          zoom: 1.5,\r\n+          maxZoom: 1,\r\n+\r\n+          type: \"yandex#satellite\",\r\n+\r\n+          controls: [],\r\n+        }, {\r\n+          // Зададим ограниченную область прямоугольником,           \r\n+          restrictMapArea: [\r\n+              [85.000000, -179.000000],\r\n+              [-85.000000, 179.000000]\r\n+          ]\r\n+        });\r\n+\r\n+        data.forEach((element) => {\r\n+          console.log(element, \"element\");\r\n+          myMap.geoObjects.add(\r\n+            new ymaps.Placemark(\r\n+              [element.lat, element.lon],\r\n+              {\r\n+                hintContent: element.title,\r\n+              },\r\n+              {                \r\n+                // Необходимо указать данный тип макета.\r\n+                iconLayout: \"default#imageWithContent\",\r\n+                // Своё изображение иконки метки.\r\n+                // iconImageHref: 'assets/icons/placeMark.svg',\r\n+                iconImageHref: \"/static/assets/icons/placeMark.svg\",\r\n+\r\n+                // Размеры метки.\r\n+                iconImageSize: [30, 30],\r\n+                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n+                iconImageOffset: [-15, -15],\r\n+              }\r\n+            )\r\n+          );\r\n+        });\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+const mapSelfInit = (data) =>\r\n+  $(document).ready(function () {\r\n+    // Карта на странице контактов\r\n+    const isMapContacts = $(\"div\").is(\"#mapSelf\");\r\n+\r\n+    if (isMapContacts) {\r\n+      console.log(\"Нашел контейнер\", \"#mapSelf\");\r\n+\r\n+      ymaps.ready(mapSelfInit);\r\n+\r\n+      function mapSelfInit() {\r\n+        // Создание карты.\r\n+        var myMap = new ymaps.Map(\"mapSelf\", {\r\n+          // Координаты центра карты.\r\n+          // Порядок по умолчанию: «широта, долгота».\r\n+          // Чтобы не определять координаты центра карты вручную,\r\n+          // воспользуйтесь инструментом Определение координат.\r\n+          center: [data[0].lat, data[0].lon],\r\n+          // Уровень масштабирования. Допустимые значения:\r\n+          // от 0 (весь мир) до 19.\r\n+          zoom: 17,\r\n+          maxZoom: 1,\r\n+          controls: [],\r\n+        });\r\n+\r\n+        data.forEach((element) => {\r\n+          console.log(element);\r\n+          myMap.geoObjects.add(\r\n+            new ymaps.Placemark(\r\n+              [element.lat, element.lon],\r\n+              {\r\n+                hintContent: element.title,\r\n+              },\r\n+              {\r\n+                // Необходимо указать данный тип макета.\r\n+                iconLayout: \"default#imageWithContent\",\r\n+                // Своё изображение иконки метки.\r\n+                // iconImageHref: 'assets/icons/placeMark2.svg',\r\n+                iconImageHref: \"/static/assets/icons/placeMark2.svg\",\r\n+                // Размеры метки.\r\n+                iconImageSize: [60, 60],\r\n+                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n+                iconImageOffset: [-30, -50],\r\n+              }\r\n+            )\r\n+          );\r\n+        });\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+// mapInit(x);\r\n+\r\n+// mapSelfInit(y);\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+// =================================================================================================================================\r\n+// =================================================================================================================================\r\n+\r\n+function showFile(input) {\r\n+  let file = input.files[0];\r\n+  $(\".header-callback__load-file__desc\").text(`${file.name}`);  \r\n+}\r\n+\r\n+function fileNameClear() {\r\n+  const clear = () => $(\".header-callback__load-file__desc\").text(`Прикрепить резюме`);  \r\n+  setTimeout(clear, 1000);\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1623942196861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,167 @@\n+// console.log(\"Файл map.scss подключен\");\r\n+\r\n+// document.querySelector('.btn').onclick = loader;\r\n+\r\n+/*====================================\r\n+*     Yandex Map\r\n+======================================*/\r\n+// Функция ymaps.ready() будет вызвана, когда\r\n+// загрузятся все компоненты API, а также когда будет готово DOM-дерево.\r\n+// const x = [{\r\n+//         title: \"Хьюстон\",\r\n+//         lat: 29.766892,\r\n+//         lon: -95.342553\r\n+//     },\r\n+//     {\r\n+//         title: \"Ноябрьск\",\r\n+//         lat: 63.189667,\r\n+//         lon: 75.461747\r\n+//     },\r\n+//     {\r\n+//         title: \"Москва\",\r\n+//         lat: 55.661574,\r\n+//         lon: 37.573856\r\n+//     },\r\n+// ];\r\n+// const y = [\r\n+//       {\r\n+//           \"lat\": 63.197546,\r\n+//           \"lon\": 75.511242,\r\n+//       }\r\n+//   ]\r\n+// ;\r\n+\r\n+const mapInit = (data) =>\r\n+  $(document).ready(function () {\r\n+    // Проверка наличия карты на странице\r\n+    const isMapContainer = $(\"div\").is(\"#map\");\r\n+    \r\n+\r\n+    if (isMapContainer) {\r\n+      console.log(\"Нашел контейнер\", \"#map\");\r\n+      ymaps.ready(init);\r\n+\r\n+      function init() {\r\n+        // Создание карты.\r\n+        var myMap = new ymaps.Map(\"map\", {\r\n+          // Координаты центра карты.\r\n+          // Порядок по умолчанию: «широта, долгота».\r\n+          // Чтобы не определять координаты центра карты вручную,\r\n+          // воспользуйтесь инструментом Определение координат.\r\n+          center: [35.0, 10.0],\r\n+          // Уровень масштабирования. Допустимые значения:\r\n+          // от 0 (весь мир) до 19.\r\n+          zoom: 1.5,\r\n+          maxZoom: 1,\r\n+\r\n+          type: \"yandex#satellite\",\r\n+\r\n+          controls: [],\r\n+        }, {\r\n+          // Зададим ограниченную область прямоугольником,           \r\n+          restrictMapArea: [\r\n+              [85.000000, -179.000000],\r\n+              [-85.000000, 179.000000]\r\n+          ]\r\n+        });\r\n+\r\n+        data.forEach((element) => {\r\n+          console.log(element, \"element\");\r\n+          myMap.geoObjects.add(\r\n+            new ymaps.Placemark(\r\n+              [element.lat, element.lon],\r\n+              {\r\n+                hintContent: element.title,\r\n+              },\r\n+              {                \r\n+                // Необходимо указать данный тип макета.\r\n+                iconLayout: \"default#imageWithContent\",\r\n+                // Своё изображение иконки метки.\r\n+                // iconImageHref: 'assets/icons/placeMark.svg',\r\n+                iconImageHref: \"/static/assets/icons/placeMark.svg\",\r\n+\r\n+                // Размеры метки.\r\n+                iconImageSize: [30, 30],\r\n+                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n+                iconImageOffset: [-15, -15],\r\n+              }\r\n+            )\r\n+          );\r\n+        });\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+const mapSelfInit = (data) =>\r\n+  $(document).ready(function () {\r\n+    // Карта на странице контактов\r\n+    const isMapContacts = $(\"div\").is(\"#mapSelf\");\r\n+\r\n+    if (isMapContacts) {\r\n+      console.log(\"Нашел контейнер\", \"#mapSelf\");\r\n+\r\n+      ymaps.ready(mapSelfInit);\r\n+\r\n+      function mapSelfInit() {\r\n+        // Создание карты.\r\n+        var myMap = new ymaps.Map(\"mapSelf\", {\r\n+          // Координаты центра карты.\r\n+          // Порядок по умолчанию: «широта, долгота».\r\n+          // Чтобы не определять координаты центра карты вручную,\r\n+          // воспользуйтесь инструментом Определение координат.\r\n+          center: [data[0].lat, data[0].lon],\r\n+          // Уровень масштабирования. Допустимые значения:\r\n+          // от 0 (весь мир) до 19.\r\n+          zoom: 17,\r\n+          maxZoom: 1,\r\n+          controls: [],\r\n+        });\r\n+\r\n+        data.forEach((element) => {\r\n+          console.log(element);\r\n+          myMap.geoObjects.add(\r\n+            new ymaps.Placemark(\r\n+              [element.lat, element.lon],\r\n+              {\r\n+                hintContent: element.title,\r\n+              },\r\n+              {\r\n+                // Необходимо указать данный тип макета.\r\n+                iconLayout: \"default#imageWithContent\",\r\n+                // Своё изображение иконки метки.\r\n+                // iconImageHref: 'assets/icons/placeMark2.svg',\r\n+                iconImageHref: \"/static/assets/icons/placeMark2.svg\",\r\n+                // Размеры метки.\r\n+                iconImageSize: [60, 60],\r\n+                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n+                iconImageOffset: [-30, -50],\r\n+              }\r\n+            )\r\n+          );\r\n+        });\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+// mapInit(x);\r\n+\r\n+// mapSelfInit(y);\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+// =================================================================================================================================\r\n+// =================================================================================================================================\r\n+\r\n+function showFile(input) {\r\n+  let file = input.files[0];\r\n+  $(\".header-callback__load-file__desc\").text(`${file.name}`);  \r\n+}\r\n+\r\n+function fileNameClear() {    \r\n+  const clear = () => $(\".header-callback__load-file__desc\").text(`Прикрепить резюме`);\r\n+  const clearInput = () => $(\".header-callback__load-file__input\").val(\"\");  \r\n+  setTimeout(clear, 1000);\r\n+  setTimeout(clearInput, 1000);\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1623942246285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,167 @@\n+// console.log(\"Файл map.scss подключен\");\r\n+\r\n+// document.querySelector('.btn').onclick = loader;\r\n+\r\n+/*====================================\r\n+*     Yandex Map\r\n+======================================*/\r\n+// Функция ymaps.ready() будет вызвана, когда\r\n+// загрузятся все компоненты API, а также когда будет готово DOM-дерево.\r\n+// const x = [{\r\n+//         title: \"Хьюстон\",\r\n+//         lat: 29.766892,\r\n+//         lon: -95.342553\r\n+//     },\r\n+//     {\r\n+//         title: \"Ноябрьск\",\r\n+//         lat: 63.189667,\r\n+//         lon: 75.461747\r\n+//     },\r\n+//     {\r\n+//         title: \"Москва\",\r\n+//         lat: 55.661574,\r\n+//         lon: 37.573856\r\n+//     },\r\n+// ];\r\n+// const y = [\r\n+//       {\r\n+//           \"lat\": 63.197546,\r\n+//           \"lon\": 75.511242,\r\n+//       }\r\n+//   ]\r\n+// ;\r\n+\r\n+const mapInit = (data) =>\r\n+  $(document).ready(function () {\r\n+    // Проверка наличия карты на странице\r\n+    const isMapContainer = $(\"div\").is(\"#map\");\r\n+    \r\n+\r\n+    if (isMapContainer) {\r\n+      console.log(\"Нашел контейнер\", \"#map\");\r\n+      ymaps.ready(init);\r\n+\r\n+      function init() {\r\n+        // Создание карты.\r\n+        var myMap = new ymaps.Map(\"map\", {\r\n+          // Координаты центра карты.\r\n+          // Порядок по умолчанию: «широта, долгота».\r\n+          // Чтобы не определять координаты центра карты вручную,\r\n+          // воспользуйтесь инструментом Определение координат.\r\n+          center: [35.0, 10.0],\r\n+          // Уровень масштабирования. Допустимые значения:\r\n+          // от 0 (весь мир) до 19.\r\n+          zoom: 1.5,\r\n+          maxZoom: 1,\r\n+\r\n+          type: \"yandex#satellite\",\r\n+\r\n+          controls: [],\r\n+        }, {\r\n+          // Зададим ограниченную область прямоугольником,           \r\n+          restrictMapArea: [\r\n+              [85.000000, -179.000000],\r\n+              [-85.000000, 179.000000]\r\n+          ]\r\n+        });\r\n+\r\n+        data.forEach((element) => {\r\n+          console.log(element, \"element\");\r\n+          myMap.geoObjects.add(\r\n+            new ymaps.Placemark(\r\n+              [element.lat, element.lon],\r\n+              {\r\n+                hintContent: element.title,\r\n+              },\r\n+              {                \r\n+                // Необходимо указать данный тип макета.\r\n+                iconLayout: \"default#imageWithContent\",\r\n+                // Своё изображение иконки метки.\r\n+                // iconImageHref: 'assets/icons/placeMark.svg',\r\n+                iconImageHref: \"/static/assets/icons/placeMark.svg\",\r\n+\r\n+                // Размеры метки.\r\n+                iconImageSize: [30, 30],\r\n+                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n+                iconImageOffset: [-15, -15],\r\n+              }\r\n+            )\r\n+          );\r\n+        });\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+const mapSelfInit = (data) =>\r\n+  $(document).ready(function () {\r\n+    // Карта на странице контактов\r\n+    const isMapContacts = $(\"div\").is(\"#mapSelf\");\r\n+\r\n+    if (isMapContacts) {\r\n+      console.log(\"Нашел контейнер\", \"#mapSelf\");\r\n+\r\n+      ymaps.ready(mapSelfInit);\r\n+\r\n+      function mapSelfInit() {\r\n+        // Создание карты.\r\n+        var myMap = new ymaps.Map(\"mapSelf\", {\r\n+          // Координаты центра карты.\r\n+          // Порядок по умолчанию: «широта, долгота».\r\n+          // Чтобы не определять координаты центра карты вручную,\r\n+          // воспользуйтесь инструментом Определение координат.\r\n+          center: [data[0].lat, data[0].lon],\r\n+          // Уровень масштабирования. Допустимые значения:\r\n+          // от 0 (весь мир) до 19.\r\n+          zoom: 17,\r\n+          maxZoom: 1,\r\n+          controls: [],\r\n+        });\r\n+\r\n+        data.forEach((element) => {\r\n+          console.log(element);\r\n+          myMap.geoObjects.add(\r\n+            new ymaps.Placemark(\r\n+              [element.lat, element.lon],\r\n+              {\r\n+                hintContent: element.title,\r\n+              },\r\n+              {\r\n+                // Необходимо указать данный тип макета.\r\n+                iconLayout: \"default#imageWithContent\",\r\n+                // Своё изображение иконки метки.\r\n+                // iconImageHref: 'assets/icons/placeMark2.svg',\r\n+                iconImageHref: \"/static/assets/icons/placeMark2.svg\",\r\n+                // Размеры метки.\r\n+                iconImageSize: [60, 60],\r\n+                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n+                iconImageOffset: [-30, -50],\r\n+              }\r\n+            )\r\n+          );\r\n+        });\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+// mapInit(x);\r\n+\r\n+// mapSelfInit(y);\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+// =================================================================================================================================\r\n+// =================================================================================================================================\r\n+\r\n+function showFile(input) {\r\n+  let file = input.files[0];\r\n+  $(\".header-callback__load-file__desc\").text(`${file.name}`);  \r\n+}\r\n+\r\n+function fileNameClear() {    \r\n+  const clear = () => $(\".header-callback__load-file__desc\").text(`Прикрепить резюме`);\r\n+  const clearInput = () => $(\".header-callback__load-file__input\").val(\"\");  \r\n+  setTimeout(clear, 1000);\r\n+  setTimeout(clearInput, 1000);\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1624886840197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,132 @@\n+/*====================================\r\n+*     Yandex Map\r\n+======================================*/\r\n+\r\n+\r\n+const mapInit = (data) =>\r\n+  $(document).ready(function () {\r\n+    // Проверка наличия карты на странице\r\n+    const isMapContainer = $(\"div\").is(\"#map\");\r\n+    \r\n+\r\n+    if (isMapContainer) {\r\n+      console.log(\"Нашел контейнер\", \"#map\");\r\n+      ymaps.ready(init);\r\n+\r\n+      function init() {\r\n+        // Создание карты.\r\n+        var myMap = new ymaps.Map(\"map\", {\r\n+          // Координаты центра карты.\r\n+          // Порядок по умолчанию: «широта, долгота».\r\n+          // Чтобы не определять координаты центра карты вручную,\r\n+          // воспользуйтесь инструментом Определение координат.\r\n+          center: [35.0, 10.0],\r\n+          // Уровень масштабирования. Допустимые значения:\r\n+          // от 0 (весь мир) до 19.\r\n+          zoom: 1.5,\r\n+          maxZoom: 1,\r\n+\r\n+          type: \"yandex#satellite\",\r\n+\r\n+          controls: [],\r\n+        }, {\r\n+          // Зададим ограниченную область прямоугольником,           \r\n+          restrictMapArea: [\r\n+              [85.000000, -179.000000],\r\n+              [-85.000000, 179.000000]\r\n+          ]\r\n+        });\r\n+\r\n+        data.forEach((element) => {\r\n+          console.log(element, \"element\");\r\n+          myMap.geoObjects.add(\r\n+            new ymaps.Placemark(\r\n+              [element.lat, element.lon],\r\n+              {\r\n+                hintContent: element.title,\r\n+              },\r\n+              {                \r\n+                // Необходимо указать данный тип макета.\r\n+                iconLayout: \"default#imageWithContent\",\r\n+                // Своё изображение иконки метки.\r\n+                // iconImageHref: 'assets/icons/placeMark.svg',\r\n+                iconImageHref: \"/static/assets/icons/placeMark.svg\",\r\n+\r\n+                // Размеры метки.\r\n+                iconImageSize: [30, 30],\r\n+                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n+                iconImageOffset: [-15, -15],\r\n+              }\r\n+            )\r\n+          );\r\n+        });\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+const mapSelfInit = (data) =>\r\n+  $(document).ready(function () {\r\n+    // Карта на странице контактов\r\n+    const isMapContacts = $(\"div\").is(\"#mapSelf\");\r\n+\r\n+    if (isMapContacts) {\r\n+      console.log(\"Нашел контейнер\", \"#mapSelf\");\r\n+\r\n+      ymaps.ready(mapSelfInit);\r\n+\r\n+      function mapSelfInit() {\r\n+        // Создание карты.\r\n+        var myMap = new ymaps.Map(\"mapSelf\", {\r\n+          // Координаты центра карты.\r\n+          // Порядок по умолчанию: «широта, долгота».\r\n+          // Чтобы не определять координаты центра карты вручную,\r\n+          // воспользуйтесь инструментом Определение координат.\r\n+          center: [data[0].lat, data[0].lon],\r\n+          // Уровень масштабирования. Допустимые значения:\r\n+          // от 0 (весь мир) до 19.\r\n+          zoom: 17,\r\n+          maxZoom: 1,\r\n+          controls: [],\r\n+        });\r\n+\r\n+        data.forEach((element) => {\r\n+          console.log(element);\r\n+          myMap.geoObjects.add(\r\n+            new ymaps.Placemark(\r\n+              [element.lat, element.lon],\r\n+              {\r\n+                hintContent: element.title,\r\n+              },\r\n+              {\r\n+                // Необходимо указать данный тип макета.\r\n+                iconLayout: \"default#imageWithContent\",\r\n+                // Своё изображение иконки метки.\r\n+                // iconImageHref: 'assets/icons/placeMark2.svg',\r\n+                iconImageHref: \"/static/assets/icons/placeMark2.svg\",\r\n+                // Размеры метки.\r\n+                iconImageSize: [60, 60],\r\n+                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n+                iconImageOffset: [-30, -50],\r\n+              }\r\n+            )\r\n+          );\r\n+        });\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+\r\n+// =================================================================================================================================\r\n+// =================================================================================================================================\r\n+\r\n+function showFile(input) {\r\n+  let file = input.files[0];\r\n+  $(\".header-callback__load-file__desc\").text(`${file.name}`);  \r\n+}\r\n+\r\n+function fileNameClear() {    \r\n+  const clear = () => $(\".header-callback__load-file__desc\").text(`Прикрепить резюме`);\r\n+  const clearInput = () => $(\".header-callback__load-file__input\").val(\"\");  \r\n+  setTimeout(clear, 1000);\r\n+  setTimeout(clearInput, 1000);\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1624891238588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,336 +1,13 @@\n-/*====================================\r\n-*     Yandex Map\r\n-======================================*/\r\n-\r\n-\r\n-const mapInit = (data) =>\r\n-  $(document).ready(function () {\r\n-    // Проверка наличия карты на странице\r\n-    const isMapContainer = $(\"div\").is(\"#map\");\r\n-    \r\n-\r\n-    if (isMapContainer) {\r\n-      console.log(\"Нашел контейнер\", \"#map\");\r\n-      ymaps.ready(init);\r\n-\r\n-      function init() {\r\n-        // Создание карты.\r\n-        var myMap = new ymaps.Map(\"map\", {\r\n-          // Координаты центра карты.\r\n-          // Порядок по умолчанию: «широта, долгота».\r\n-          // Чтобы не определять координаты центра карты вручную,\r\n-          // воспользуйтесь инструментом Определение координат.\r\n-          center: [35.0, 10.0],\r\n-          // Уровень масштабирования. Допустимые значения:\r\n-          // от 0 (весь мир) до 19.\r\n-          zoom: 1.5,\r\n-          maxZoom: 1,\r\n-\r\n-          type: \"yandex#satellite\",\r\n-\r\n-          controls: [],\r\n-        }, {\r\n-          // Зададим ограниченную область прямоугольником,           \r\n-          restrictMapArea: [\r\n-              [85.000000, -179.000000],\r\n-              [-85.000000, 179.000000]\r\n-          ]\r\n-        });\r\n-\r\n-        data.forEach((element) => {\r\n-          console.log(element, \"element\");\r\n-          myMap.geoObjects.add(\r\n-            new ymaps.Placemark(\r\n-              [element.lat, element.lon],\r\n-              {\r\n-                hintContent: element.title,\r\n-              },\r\n-              {                \r\n-                // Необходимо указать данный тип макета.\r\n-                iconLayout: \"default#imageWithContent\",\r\n-                // Своё изображение иконки метки.\r\n-                // iconImageHref: 'assets/icons/placeMark.svg',\r\n-                iconImageHref: \"/static/assets/icons/placeMark.svg\",\r\n-\r\n-                // Размеры метки.\r\n-                iconImageSize: [30, 30],\r\n-                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n-                iconImageOffset: [-15, -15],\r\n-              }\r\n-            )\r\n-          );\r\n-        });\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-const mapSelfInit = (data) =>\r\n-  $(document).ready(function () {\r\n-    // Карта на странице контактов\r\n-    const isMapContacts = $(\"div\").is(\"#mapSelf\");\r\n-\r\n-    if (isMapContacts) {\r\n-      console.log(\"Нашел контейнер\", \"#mapSelf\");\r\n-\r\n-      ymaps.ready(mapSelfInit);\r\n-\r\n-      function mapSelfInit() {\r\n-        // Создание карты.\r\n-        var myMap = new ymaps.Map(\"mapSelf\", {\r\n-          // Координаты центра карты.\r\n-          // Порядок по умолчанию: «широта, долгота».\r\n-          // Чтобы не определять координаты центра карты вручную,\r\n-          // воспользуйтесь инструментом Определение координат.\r\n-          center: [data[0].lat, data[0].lon],\r\n-          // Уровень масштабирования. Допустимые значения:\r\n-          // от 0 (весь мир) до 19.\r\n-          zoom: 17,\r\n-          maxZoom: 1,\r\n-          controls: [],\r\n-        });\r\n-\r\n-        data.forEach((element) => {\r\n-          console.log(element);\r\n-          myMap.geoObjects.add(\r\n-            new ymaps.Placemark(\r\n-              [element.lat, element.lon],\r\n-              {\r\n-                hintContent: element.title,\r\n-              },\r\n-              {\r\n-                // Необходимо указать данный тип макета.\r\n-                iconLayout: \"default#imageWithContent\",\r\n-                // Своё изображение иконки метки.\r\n-                // iconImageHref: 'assets/icons/placeMark2.svg',\r\n-                iconImageHref: \"/static/assets/icons/placeMark2.svg\",\r\n-                // Размеры метки.\r\n-                iconImageSize: [60, 60],\r\n-                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n-                iconImageOffset: [-30, -50],\r\n-              }\r\n-            )\r\n-          );\r\n-        });\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-\r\n-// =================================================================================================================================\r\n-// =================================================================================================================================\r\n-\r\n-function showFile(input) {\r\n-  let file = input.files[0];\r\n-  $(\".header-callback__load-file__desc\").text(`${file.name}`);  \r\n-}\r\n-\r\n-function fileNameClear() {    \r\n-  const clear = () => $(\".header-callback__load-file__desc\").text(`Прикрепить резюме`);\r\n-  const clearInput = () => $(\".header-callback__load-file__input\").val(\"\");  \r\n-  setTimeout(clear, 1000);\r\n-  setTimeout(clearInput, 1000);\r\n-}\n // console.log(\"Файл map.scss подключен\");\r\n \r\n // document.querySelector('.btn').onclick = loader;\r\n \r\n /*====================================\r\n *     Yandex Map\r\n ======================================*/\r\n-// Функция ymaps.ready() будет вызвана, когда\r\n-// загрузятся все компоненты API, а также когда будет готово DOM-дерево.\r\n-// const x = [{\r\n-//         title: \"Хьюстон\",\r\n-//         lat: 29.766892,\r\n-//         lon: -95.342553\r\n-//     },\r\n-//     {\r\n-//         title: \"Ноябрьск\",\r\n-//         lat: 63.189667,\r\n-//         lon: 75.461747\r\n-//     },\r\n-//     {\r\n-//         title: \"Москва\",\r\n-//         lat: 55.661574,\r\n-//         lon: 37.573856\r\n-//     },\r\n-// ];\r\n-// const y = [\r\n-//       {\r\n-//           \"lat\": 63.197546,\r\n-//           \"lon\": 75.511242,\r\n-//       }\r\n-//   ]\r\n-// ;\r\n \r\n-const mapInit = (data) =>\r\n-  $(document).ready(function () {\r\n-    // Проверка наличия карты на странице\r\n-    const isMapContainer = $(\"div\").is(\"#map\");\r\n-    \r\n \r\n-    if (isMapContainer) {\r\n-      console.log(\"Нашел контейнер\", \"#map\");\r\n-      ymaps.ready(init);\r\n-\r\n-      function init() {\r\n-        // Создание карты.\r\n-        var myMap = new ymaps.Map(\"map\", {\r\n-          // Координаты центра карты.\r\n-          // Порядок по умолчанию: «широта, долгота».\r\n-          // Чтобы не определять координаты центра карты вручную,\r\n-          // воспользуйтесь инструментом Определение координат.\r\n-          center: [35.0, 10.0],\r\n-          // Уровень масштабирования. Допустимые значения:\r\n-          // от 0 (весь мир) до 19.\r\n-          zoom: 1.5,\r\n-          maxZoom: 1,\r\n-\r\n-          type: \"yandex#satellite\",\r\n-\r\n-          controls: [],\r\n-        }, {\r\n-          // Зададим ограниченную область прямоугольником,           \r\n-          restrictMapArea: [\r\n-              [85.000000, -179.000000],\r\n-              [-85.000000, 179.000000]\r\n-          ]\r\n-        });\r\n-\r\n-        data.forEach((element) => {\r\n-          console.log(element, \"element\");\r\n-          myMap.geoObjects.add(\r\n-            new ymaps.Placemark(\r\n-              [element.lat, element.lon],\r\n-              {\r\n-                hintContent: element.title,\r\n-              },\r\n-              {                \r\n-                // Необходимо указать данный тип макета.\r\n-                iconLayout: \"default#imageWithContent\",\r\n-                // Своё изображение иконки метки.\r\n-                // iconImageHref: 'assets/icons/placeMark.svg',\r\n-                iconImageHref: \"/static/assets/icons/placeMark.svg\",\r\n-\r\n-                // Размеры метки.\r\n-                iconImageSize: [30, 30],\r\n-                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n-                iconImageOffset: [-15, -15],\r\n-              }\r\n-            )\r\n-          );\r\n-        });\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-const mapSelfInit = (data) =>\r\n-  $(document).ready(function () {\r\n-    // Карта на странице контактов\r\n-    const isMapContacts = $(\"div\").is(\"#mapSelf\");\r\n-\r\n-    if (isMapContacts) {\r\n-      console.log(\"Нашел контейнер\", \"#mapSelf\");\r\n-\r\n-      ymaps.ready(mapSelfInit);\r\n-\r\n-      function mapSelfInit() {\r\n-        // Создание карты.\r\n-        var myMap = new ymaps.Map(\"mapSelf\", {\r\n-          // Координаты центра карты.\r\n-          // Порядок по умолчанию: «широта, долгота».\r\n-          // Чтобы не определять координаты центра карты вручную,\r\n-          // воспользуйтесь инструментом Определение координат.\r\n-          center: [data[0].lat, data[0].lon],\r\n-          // Уровень масштабирования. Допустимые значения:\r\n-          // от 0 (весь мир) до 19.\r\n-          zoom: 17,\r\n-          maxZoom: 1,\r\n-          controls: [],\r\n-        });\r\n-\r\n-        data.forEach((element) => {\r\n-          console.log(element);\r\n-          myMap.geoObjects.add(\r\n-            new ymaps.Placemark(\r\n-              [element.lat, element.lon],\r\n-              {\r\n-                hintContent: element.title,\r\n-              },\r\n-              {\r\n-                // Необходимо указать данный тип макета.\r\n-                iconLayout: \"default#imageWithContent\",\r\n-                // Своё изображение иконки метки.\r\n-                // iconImageHref: 'assets/icons/placeMark2.svg',\r\n-                iconImageHref: \"/static/assets/icons/placeMark2.svg\",\r\n-                // Размеры метки.\r\n-                iconImageSize: [60, 60],\r\n-                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n-                iconImageOffset: [-30, -50],\r\n-              }\r\n-            )\r\n-          );\r\n-        });\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-// mapInit(x);\r\n-\r\n-// mapSelfInit(y);\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-// =================================================================================================================================\r\n-// =================================================================================================================================\r\n-\r\n-function showFile(input) {\r\n-  let file = input.files[0];\r\n-  $(\".header-callback__load-file__desc\").text(`${file.name}`);  \r\n-}\r\n-\r\n-function fileNameClear() {    \r\n-  const clear = () => $(\".header-callback__load-file__desc\").text(`Прикрепить резюме`);\r\n-  const clearInput = () => $(\".header-callback__load-file__input\").val(\"\");  \r\n-  setTimeout(clear, 1000);\r\n-  setTimeout(clearInput, 1000);\r\n-}\n-// console.log(\"Файл map.scss подключен\");\r\n-\r\n-// document.querySelector('.btn').onclick = loader;\r\n-\r\n-/*====================================\r\n-*     Yandex Map\r\n-======================================*/\r\n-// Функция ymaps.ready() будет вызвана, когда\r\n-// загрузятся все компоненты API, а также когда будет готово DOM-дерево.\r\n-// const x = [{\r\n-//         title: \"Хьюстон\",\r\n-//         lat: 29.766892,\r\n-//         lon: -95.342553\r\n-//     },\r\n-//     {\r\n-//         title: \"Ноябрьск\",\r\n-//         lat: 63.189667,\r\n-//         lon: 75.461747\r\n-//     },\r\n-//     {\r\n-//         title: \"Москва\",\r\n-//         lat: 55.661574,\r\n-//         lon: 37.573856\r\n-//     },\r\n-// ];\r\n-// const y = [\r\n-//       {\r\n-//           \"lat\": 63.197546,\r\n-//           \"lon\": 75.511242,\r\n-//       }\r\n-//   ]\r\n-// ;\r\n-\r\n const mapInit = (data) =>\r\n   $(document).ready(function () {\r\n     // Проверка наличия карты на странице\r\n     const isMapContainer = $(\"div\").is(\"#map\");\r\n@@ -462,842 +139,5 @@\n   const clear = () => $(\".header-callback__load-file__desc\").text(`Прикрепить резюме`);\r\n   const clearInput = () => $(\".header-callback__load-file__input\").val(\"\");  \r\n   setTimeout(clear, 1000);\r\n   setTimeout(clearInput, 1000);\r\n-}\n-// console.log(\"Файл map.scss подключен\");\r\n-\r\n-// document.querySelector('.btn').onclick = loader;\r\n-\r\n-/*====================================\r\n-*     Yandex Map\r\n-======================================*/\r\n-// Функция ymaps.ready() будет вызвана, когда\r\n-// загрузятся все компоненты API, а также когда будет готово DOM-дерево.\r\n-// const x = [{\r\n-//         title: \"Хьюстон\",\r\n-//         lat: 29.766892,\r\n-//         lon: -95.342553\r\n-//     },\r\n-//     {\r\n-//         title: \"Ноябрьск\",\r\n-//         lat: 63.189667,\r\n-//         lon: 75.461747\r\n-//     },\r\n-//     {\r\n-//         title: \"Москва\",\r\n-//         lat: 55.661574,\r\n-//         lon: 37.573856\r\n-//     },\r\n-// ];\r\n-// const y = [\r\n-//       {\r\n-//           \"lat\": 63.197546,\r\n-//           \"lon\": 75.511242,\r\n-//       }\r\n-//   ]\r\n-// ;\r\n-\r\n-const mapInit = (data) =>\r\n-  $(document).ready(function () {\r\n-    // Проверка наличия карты на странице\r\n-    const isMapContainer = $(\"div\").is(\"#map\");\r\n-    \r\n-\r\n-    if (isMapContainer) {\r\n-      console.log(\"Нашел контейнер\", \"#map\");\r\n-      ymaps.ready(init);\r\n-\r\n-      function init() {\r\n-        // Создание карты.\r\n-        var myMap = new ymaps.Map(\"map\", {\r\n-          // Координаты центра карты.\r\n-          // Порядок по умолчанию: «широта, долгота».\r\n-          // Чтобы не определять координаты центра карты вручную,\r\n-          // воспользуйтесь инструментом Определение координат.\r\n-          center: [35.0, 10.0],\r\n-          // Уровень масштабирования. Допустимые значения:\r\n-          // от 0 (весь мир) до 19.\r\n-          zoom: 1.5,\r\n-          maxZoom: 1,\r\n-\r\n-          type: \"yandex#satellite\",\r\n-\r\n-          controls: [],\r\n-        }, {\r\n-          // Зададим ограниченную область прямоугольником,           \r\n-          restrictMapArea: [\r\n-              [85.000000, -179.000000],\r\n-              [-85.000000, 179.000000]\r\n-          ]\r\n-        });\r\n-\r\n-        data.forEach((element) => {\r\n-          console.log(element, \"element\");\r\n-          myMap.geoObjects.add(\r\n-            new ymaps.Placemark(\r\n-              [element.lat, element.lon],\r\n-              {\r\n-                hintContent: element.title,\r\n-              },\r\n-              {                \r\n-                // Необходимо указать данный тип макета.\r\n-                iconLayout: \"default#imageWithContent\",\r\n-                // Своё изображение иконки метки.\r\n-                // iconImageHref: 'assets/icons/placeMark.svg',\r\n-                iconImageHref: \"/static/assets/icons/placeMark.svg\",\r\n-\r\n-                // Размеры метки.\r\n-                iconImageSize: [30, 30],\r\n-                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n-                iconImageOffset: [-15, -15],\r\n-              }\r\n-            )\r\n-          );\r\n-        });\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-const mapSelfInit = (data) =>\r\n-  $(document).ready(function () {\r\n-    // Карта на странице контактов\r\n-    const isMapContacts = $(\"div\").is(\"#mapSelf\");\r\n-\r\n-    if (isMapContacts) {\r\n-      console.log(\"Нашел контейнер\", \"#mapSelf\");\r\n-\r\n-      ymaps.ready(mapSelfInit);\r\n-\r\n-      function mapSelfInit() {\r\n-        // Создание карты.\r\n-        var myMap = new ymaps.Map(\"mapSelf\", {\r\n-          // Координаты центра карты.\r\n-          // Порядок по умолчанию: «широта, долгота».\r\n-          // Чтобы не определять координаты центра карты вручную,\r\n-          // воспользуйтесь инструментом Определение координат.\r\n-          center: [data[0].lat, data[0].lon],\r\n-          // Уровень масштабирования. Допустимые значения:\r\n-          // от 0 (весь мир) до 19.\r\n-          zoom: 17,\r\n-          maxZoom: 1,\r\n-          controls: [],\r\n-        });\r\n-\r\n-        data.forEach((element) => {\r\n-          console.log(element);\r\n-          myMap.geoObjects.add(\r\n-            new ymaps.Placemark(\r\n-              [element.lat, element.lon],\r\n-              {\r\n-                hintContent: element.title,\r\n-              },\r\n-              {\r\n-                // Необходимо указать данный тип макета.\r\n-                iconLayout: \"default#imageWithContent\",\r\n-                // Своё изображение иконки метки.\r\n-                // iconImageHref: 'assets/icons/placeMark2.svg',\r\n-                iconImageHref: \"/static/assets/icons/placeMark2.svg\",\r\n-                // Размеры метки.\r\n-                iconImageSize: [60, 60],\r\n-                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n-                iconImageOffset: [-30, -50],\r\n-              }\r\n-            )\r\n-          );\r\n-        });\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-// mapInit(x);\r\n-\r\n-// mapSelfInit(y);\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-// =================================================================================================================================\r\n-// =================================================================================================================================\r\n-\r\n-function showFile(input) {\r\n-  let file = input.files[0];\r\n-  $(\".header-callback__load-file__desc\").text(`${file.name}`);  \r\n-}\r\n-\r\n-function fileNameClear() {\r\n-  const clear = () => $(\".header-callback__load-file__desc\").text(`Прикрепить резюме`);  \r\n-  setTimeout(clear, 1000);\r\n-}\n-// console.log(\"Файл map.scss подключен\");\r\n-\r\n-// document.querySelector('.btn').onclick = loader;\r\n-\r\n-/*====================================\r\n-*     Yandex Map\r\n-======================================*/\r\n-// Функция ymaps.ready() будет вызвана, когда\r\n-// загрузятся все компоненты API, а также когда будет готово DOM-дерево.\r\n-// const x = [{\r\n-//         title: \"Хьюстон\",\r\n-//         lat: 29.766892,\r\n-//         lon: -95.342553\r\n-//     },\r\n-//     {\r\n-//         title: \"Ноябрьск\",\r\n-//         lat: 63.189667,\r\n-//         lon: 75.461747\r\n-//     },\r\n-//     {\r\n-//         title: \"Москва\",\r\n-//         lat: 55.661574,\r\n-//         lon: 37.573856\r\n-//     },\r\n-// ];\r\n-// const y = [\r\n-//       {\r\n-//           \"lat\": 63.197546,\r\n-//           \"lon\": 75.511242,\r\n-//       }\r\n-//   ]\r\n-// ;\r\n-\r\n-const mapInit = (data) =>\r\n-  $(document).ready(function () {\r\n-    // Проверка наличия карты на странице\r\n-    const isMapContainer = $(\"div\").is(\"#map\");\r\n-    \r\n-\r\n-    if (isMapContainer) {\r\n-      console.log(\"Нашел контейнер\", \"#map\");\r\n-      ymaps.ready(init);\r\n-\r\n-      function init() {\r\n-        // Создание карты.\r\n-        var myMap = new ymaps.Map(\"map\", {\r\n-          // Координаты центра карты.\r\n-          // Порядок по умолчанию: «широта, долгота».\r\n-          // Чтобы не определять координаты центра карты вручную,\r\n-          // воспользуйтесь инструментом Определение координат.\r\n-          center: [35.0, 10.0],\r\n-          // Уровень масштабирования. Допустимые значения:\r\n-          // от 0 (весь мир) до 19.\r\n-          zoom: 1.5,\r\n-          maxZoom: 1,\r\n-\r\n-          type: \"yandex#satellite\",\r\n-\r\n-          controls: [],\r\n-        }, {\r\n-          // Зададим ограниченную область прямоугольником,           \r\n-          restrictMapArea: [\r\n-              [85.000000, -179.000000],\r\n-              [-85.000000, 179.000000]\r\n-          ]\r\n-        });\r\n-\r\n-        data.forEach((element) => {\r\n-          console.log(element, \"element\");\r\n-          myMap.geoObjects.add(\r\n-            new ymaps.Placemark(\r\n-              [element.lat, element.lon],\r\n-              {\r\n-                hintContent: element.title,\r\n-              },\r\n-              {                \r\n-                // Необходимо указать данный тип макета.\r\n-                iconLayout: \"default#imageWithContent\",\r\n-                // Своё изображение иконки метки.\r\n-                // iconImageHref: 'assets/icons/placeMark.svg',\r\n-                iconImageHref: \"/static/assets/icons/placeMark.svg\",\r\n-\r\n-                // Размеры метки.\r\n-                iconImageSize: [30, 30],\r\n-                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n-                iconImageOffset: [-15, -15],\r\n-              }\r\n-            )\r\n-          );\r\n-        });\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-const mapSelfInit = (data) =>\r\n-  $(document).ready(function () {\r\n-    // Карта на странице контактов\r\n-    const isMapContacts = $(\"div\").is(\"#mapSelf\");\r\n-\r\n-    if (isMapContacts) {\r\n-      console.log(\"Нашел контейнер\", \"#mapSelf\");\r\n-\r\n-      ymaps.ready(mapSelfInit);\r\n-\r\n-      function mapSelfInit() {\r\n-        // Создание карты.\r\n-        var myMap = new ymaps.Map(\"mapSelf\", {\r\n-          // Координаты центра карты.\r\n-          // Порядок по умолчанию: «широта, долгота».\r\n-          // Чтобы не определять координаты центра карты вручную,\r\n-          // воспользуйтесь инструментом Определение координат.\r\n-          center: [data[0].lat, data[0].lon],\r\n-          // Уровень масштабирования. Допустимые значения:\r\n-          // от 0 (весь мир) до 19.\r\n-          zoom: 17,\r\n-          maxZoom: 1,\r\n-          controls: [],\r\n-        });\r\n-\r\n-        data.forEach((element) => {\r\n-          console.log(element);\r\n-          myMap.geoObjects.add(\r\n-            new ymaps.Placemark(\r\n-              [element.lat, element.lon],\r\n-              {\r\n-                hintContent: element.title,\r\n-              },\r\n-              {\r\n-                // Необходимо указать данный тип макета.\r\n-                iconLayout: \"default#imageWithContent\",\r\n-                // Своё изображение иконки метки.\r\n-                // iconImageHref: 'assets/icons/placeMark2.svg',\r\n-                iconImageHref: \"/static/assets/icons/placeMark2.svg\",\r\n-                // Размеры метки.\r\n-                iconImageSize: [60, 60],\r\n-                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n-                iconImageOffset: [-30, -50],\r\n-              }\r\n-            )\r\n-          );\r\n-        });\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-// mapInit(x);\r\n-\r\n-// mapSelfInit(y);\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-// =================================================================================================================================\r\n-// =================================================================================================================================\r\n-\r\n-function showFile(input) {\r\n-  let file = input.files[0];\r\n-  $(\".header-callback__load-file__desc\").text(`${file.name}`);  \r\n-}\r\n-\r\n-function fileNameClear() {\r\n-  const clear = () => $(\".header-callback__load-file__desc\").text(`Прикрепить резюме`);  \r\n-  setTimeout(clear, 1000);\r\n-}\r\n-\r\n-// const fileNameClearqwqw = setTimeout(fileNameClear, 1000)\r\n- \n-// console.log(\"Файл map.scss подключен\");\r\n-\r\n-// document.querySelector('.btn').onclick = loader;\r\n-\r\n-/*====================================\r\n-*     Yandex Map\r\n-======================================*/\r\n-// Функция ymaps.ready() будет вызвана, когда\r\n-// загрузятся все компоненты API, а также когда будет готово DOM-дерево.\r\n-// const x = [{\r\n-//         title: \"Хьюстон\",\r\n-//         lat: 29.766892,\r\n-//         lon: -95.342553\r\n-//     },\r\n-//     {\r\n-//         title: \"Ноябрьск\",\r\n-//         lat: 63.189667,\r\n-//         lon: 75.461747\r\n-//     },\r\n-//     {\r\n-//         title: \"Москва\",\r\n-//         lat: 55.661574,\r\n-//         lon: 37.573856\r\n-//     },\r\n-// ];\r\n-// const y = [\r\n-//       {\r\n-//           \"lat\": 63.197546,\r\n-//           \"lon\": 75.511242,\r\n-//       }\r\n-//   ]\r\n-// ;\r\n-\r\n-const mapInit = (data) =>\r\n-  $(document).ready(function () {\r\n-    // Проверка наличия карты на странице\r\n-    const isMapContainer = $(\"div\").is(\"#map\");\r\n-    \r\n-\r\n-    if (isMapContainer) {\r\n-      console.log(\"Нашел контейнер\", \"#map\");\r\n-      ymaps.ready(init);\r\n-\r\n-      function init() {\r\n-        // Создание карты.\r\n-        var myMap = new ymaps.Map(\"map\", {\r\n-          // Координаты центра карты.\r\n-          // Порядок по умолчанию: «широта, долгота».\r\n-          // Чтобы не определять координаты центра карты вручную,\r\n-          // воспользуйтесь инструментом Определение координат.\r\n-          center: [35.0, 10.0],\r\n-          // Уровень масштабирования. Допустимые значения:\r\n-          // от 0 (весь мир) до 19.\r\n-          zoom: 1.5,\r\n-          maxZoom: 1,\r\n-\r\n-          type: \"yandex#satellite\",\r\n-\r\n-          controls: [],\r\n-        }, {\r\n-          // Зададим ограниченную область прямоугольником,           \r\n-          restrictMapArea: [\r\n-              [85.000000, -179.000000],\r\n-              [-85.000000, 179.000000]\r\n-          ]\r\n-        });\r\n-\r\n-        data.forEach((element) => {\r\n-          console.log(element, \"element\");\r\n-          myMap.geoObjects.add(\r\n-            new ymaps.Placemark(\r\n-              [element.lat, element.lon],\r\n-              {\r\n-                hintContent: element.title,\r\n-              },\r\n-              {                \r\n-                // Необходимо указать данный тип макета.\r\n-                iconLayout: \"default#imageWithContent\",\r\n-                // Своё изображение иконки метки.\r\n-                // iconImageHref: 'assets/icons/placeMark.svg',\r\n-                iconImageHref: \"/static/assets/icons/placeMark.svg\",\r\n-\r\n-                // Размеры метки.\r\n-                iconImageSize: [30, 30],\r\n-                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n-                iconImageOffset: [-15, -15],\r\n-              }\r\n-            )\r\n-          );\r\n-        });\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-const mapSelfInit = (data) =>\r\n-  $(document).ready(function () {\r\n-    // Карта на странице контактов\r\n-    const isMapContacts = $(\"div\").is(\"#mapSelf\");\r\n-\r\n-    if (isMapContacts) {\r\n-      console.log(\"Нашел контейнер\", \"#mapSelf\");\r\n-\r\n-      ymaps.ready(mapSelfInit);\r\n-\r\n-      function mapSelfInit() {\r\n-        // Создание карты.\r\n-        var myMap = new ymaps.Map(\"mapSelf\", {\r\n-          // Координаты центра карты.\r\n-          // Порядок по умолчанию: «широта, долгота».\r\n-          // Чтобы не определять координаты центра карты вручную,\r\n-          // воспользуйтесь инструментом Определение координат.\r\n-          center: [data[0].lat, data[0].lon],\r\n-          // Уровень масштабирования. Допустимые значения:\r\n-          // от 0 (весь мир) до 19.\r\n-          zoom: 17,\r\n-          maxZoom: 1,\r\n-          controls: [],\r\n-        });\r\n-\r\n-        data.forEach((element) => {\r\n-          console.log(element);\r\n-          myMap.geoObjects.add(\r\n-            new ymaps.Placemark(\r\n-              [element.lat, element.lon],\r\n-              {\r\n-                hintContent: element.title,\r\n-              },\r\n-              {\r\n-                // Необходимо указать данный тип макета.\r\n-                iconLayout: \"default#imageWithContent\",\r\n-                // Своё изображение иконки метки.\r\n-                // iconImageHref: 'assets/icons/placeMark2.svg',\r\n-                iconImageHref: \"/static/assets/icons/placeMark2.svg\",\r\n-                // Размеры метки.\r\n-                iconImageSize: [60, 60],\r\n-                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n-                iconImageOffset: [-30, -50],\r\n-              }\r\n-            )\r\n-          );\r\n-        });\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-// mapInit(x);\r\n-\r\n-// mapSelfInit(y);\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-// =================================================================================================================================\r\n-// =================================================================================================================================\r\n-\r\n-function showFile(input) {\r\n-  let file = input.files[0];\r\n-  $(\".header-callback__load-file__desc\").text(`${file.name}`);  \r\n-}\r\n-\r\n-function fileNameClear() {\r\n-  const clear = () => $(\".header-callback__load-file__desc\").text(`Прикрепить резюме`);  \r\n-  setTimeout(clear, 2000);\r\n-}\r\n-\r\n-// const fileNameClearqwqw = setTimeout(fileNameClear, 1000)\r\n- \n-// console.log(\"Файл map.scss подключен\");\r\n-\r\n-// document.querySelector('.btn').onclick = loader;\r\n-\r\n-/*====================================\r\n-*     Yandex Map\r\n-======================================*/\r\n-// Функция ymaps.ready() будет вызвана, когда\r\n-// загрузятся все компоненты API, а также когда будет готово DOM-дерево.\r\n-// const x = [{\r\n-//         title: \"Хьюстон\",\r\n-//         lat: 29.766892,\r\n-//         lon: -95.342553\r\n-//     },\r\n-//     {\r\n-//         title: \"Ноябрьск\",\r\n-//         lat: 63.189667,\r\n-//         lon: 75.461747\r\n-//     },\r\n-//     {\r\n-//         title: \"Москва\",\r\n-//         lat: 55.661574,\r\n-//         lon: 37.573856\r\n-//     },\r\n-// ];\r\n-// const y = [\r\n-//       {\r\n-//           \"lat\": 63.197546,\r\n-//           \"lon\": 75.511242,\r\n-//       }\r\n-//   ]\r\n-// ;\r\n-\r\n-const mapInit = (data) =>\r\n-  $(document).ready(function () {\r\n-    // Проверка наличия карты на странице\r\n-    const isMapContainer = $(\"div\").is(\"#map\");\r\n-    \r\n-\r\n-    if (isMapContainer) {\r\n-      console.log(\"Нашел контейнер\", \"#map\");\r\n-      ymaps.ready(init);\r\n-\r\n-      function init() {\r\n-        // Создание карты.\r\n-        var myMap = new ymaps.Map(\"map\", {\r\n-          // Координаты центра карты.\r\n-          // Порядок по умолчанию: «широта, долгота».\r\n-          // Чтобы не определять координаты центра карты вручную,\r\n-          // воспользуйтесь инструментом Определение координат.\r\n-          center: [35.0, 10.0],\r\n-          // Уровень масштабирования. Допустимые значения:\r\n-          // от 0 (весь мир) до 19.\r\n-          zoom: 1.5,\r\n-          maxZoom: 1,\r\n-\r\n-          type: \"yandex#satellite\",\r\n-\r\n-          controls: [],\r\n-        }, {\r\n-          // Зададим ограниченную область прямоугольником,           \r\n-          restrictMapArea: [\r\n-              [85.000000, -179.000000],\r\n-              [-85.000000, 179.000000]\r\n-          ]\r\n-        });\r\n-\r\n-        data.forEach((element) => {\r\n-          console.log(element, \"element\");\r\n-          myMap.geoObjects.add(\r\n-            new ymaps.Placemark(\r\n-              [element.lat, element.lon],\r\n-              {\r\n-                hintContent: element.title,\r\n-              },\r\n-              {                \r\n-                // Необходимо указать данный тип макета.\r\n-                iconLayout: \"default#imageWithContent\",\r\n-                // Своё изображение иконки метки.\r\n-                // iconImageHref: 'assets/icons/placeMark.svg',\r\n-                iconImageHref: \"/static/assets/icons/placeMark.svg\",\r\n-\r\n-                // Размеры метки.\r\n-                iconImageSize: [30, 30],\r\n-                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n-                iconImageOffset: [-15, -15],\r\n-              }\r\n-            )\r\n-          );\r\n-        });\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-const mapSelfInit = (data) =>\r\n-  $(document).ready(function () {\r\n-    // Карта на странице контактов\r\n-    const isMapContacts = $(\"div\").is(\"#mapSelf\");\r\n-\r\n-    if (isMapContacts) {\r\n-      console.log(\"Нашел контейнер\", \"#mapSelf\");\r\n-\r\n-      ymaps.ready(mapSelfInit);\r\n-\r\n-      function mapSelfInit() {\r\n-        // Создание карты.\r\n-        var myMap = new ymaps.Map(\"mapSelf\", {\r\n-          // Координаты центра карты.\r\n-          // Порядок по умолчанию: «широта, долгота».\r\n-          // Чтобы не определять координаты центра карты вручную,\r\n-          // воспользуйтесь инструментом Определение координат.\r\n-          center: [data[0].lat, data[0].lon],\r\n-          // Уровень масштабирования. Допустимые значения:\r\n-          // от 0 (весь мир) до 19.\r\n-          zoom: 17,\r\n-          maxZoom: 1,\r\n-          controls: [],\r\n-        });\r\n-\r\n-        data.forEach((element) => {\r\n-          console.log(element);\r\n-          myMap.geoObjects.add(\r\n-            new ymaps.Placemark(\r\n-              [element.lat, element.lon],\r\n-              {\r\n-                hintContent: element.title,\r\n-              },\r\n-              {\r\n-                // Необходимо указать данный тип макета.\r\n-                iconLayout: \"default#imageWithContent\",\r\n-                // Своё изображение иконки метки.\r\n-                // iconImageHref: 'assets/icons/placeMark2.svg',\r\n-                iconImageHref: \"/static/assets/icons/placeMark2.svg\",\r\n-                // Размеры метки.\r\n-                iconImageSize: [60, 60],\r\n-                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n-                iconImageOffset: [-30, -50],\r\n-              }\r\n-            )\r\n-          );\r\n-        });\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-// mapInit(x);\r\n-\r\n-// mapSelfInit(y);\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-// =================================================================================================================================\r\n-// =================================================================================================================================\r\n-\r\n-function showFile(input) {\r\n-  let file = input.files[0];\r\n-  $(\".header-callback__load-file__desc\").text(`${file.name}`);  \r\n-}\r\n-\r\n-function fileNameClear() {\r\n-  // $(\".header-callback__load-file__desc\").text(`Прикрепить резюме`);  \r\n-  setTimeout($(\".header-callback__load-file__desc\").text(`Прикрепить резюме`), 10);\r\n-}\r\n-\r\n-// const fileNameClearqwqw = setTimeout(fileNameClear, 1000)\r\n- \n-// console.log(\"Файл map.scss подключен\");\r\n-\r\n-// document.querySelector('.btn').onclick = loader;\r\n-\r\n-/*====================================\r\n-*     Yandex Map\r\n-======================================*/\r\n-// Функция ymaps.ready() будет вызвана, когда\r\n-// загрузятся все компоненты API, а также когда будет готово DOM-дерево.\r\n-// const x = [{\r\n-//         title: \"Хьюстон\",\r\n-//         lat: 29.766892,\r\n-//         lon: -95.342553\r\n-//     },\r\n-//     {\r\n-//         title: \"Ноябрьск\",\r\n-//         lat: 63.189667,\r\n-//         lon: 75.461747\r\n-//     },\r\n-//     {\r\n-//         title: \"Москва\",\r\n-//         lat: 55.661574,\r\n-//         lon: 37.573856\r\n-//     },\r\n-// ];\r\n-// const y = [\r\n-//       {\r\n-//           \"lat\": 63.197546,\r\n-//           \"lon\": 75.511242,\r\n-//       }\r\n-//   ]\r\n-// ;\r\n-\r\n-const mapInit = (data) =>\r\n-  $(document).ready(function () {\r\n-    // Проверка наличия карты на странице\r\n-    const isMapContainer = $(\"div\").is(\"#map\");\r\n-    \r\n-\r\n-    if (isMapContainer) {\r\n-      console.log(\"Нашел контейнер\", \"#map\");\r\n-      ymaps.ready(init);\r\n-\r\n-      function init() {\r\n-        // Создание карты.\r\n-        var myMap = new ymaps.Map(\"map\", {\r\n-          // Координаты центра карты.\r\n-          // Порядок по умолчанию: «широта, долгота».\r\n-          // Чтобы не определять координаты центра карты вручную,\r\n-          // воспользуйтесь инструментом Определение координат.\r\n-          center: [35.0, 10.0],\r\n-          // Уровень масштабирования. Допустимые значения:\r\n-          // от 0 (весь мир) до 19.\r\n-          zoom: 1.5,\r\n-          maxZoom: 1,\r\n-\r\n-          type: \"yandex#satellite\",\r\n-\r\n-          controls: [],\r\n-        }, {\r\n-          // Зададим ограниченную область прямоугольником,           \r\n-          restrictMapArea: [\r\n-              [85.000000, -179.000000],\r\n-              [-85.000000, 179.000000]\r\n-          ]\r\n-        });\r\n-\r\n-        data.forEach((element) => {\r\n-          console.log(element, \"element\");\r\n-          myMap.geoObjects.add(\r\n-            new ymaps.Placemark(\r\n-              [element.lat, element.lon],\r\n-              {\r\n-                hintContent: element.title,\r\n-              },\r\n-              {                \r\n-                // Необходимо указать данный тип макета.\r\n-                iconLayout: \"default#imageWithContent\",\r\n-                // Своё изображение иконки метки.\r\n-                // iconImageHref: 'assets/icons/placeMark.svg',\r\n-                iconImageHref: \"/static/assets/icons/placeMark.svg\",\r\n-\r\n-                // Размеры метки.\r\n-                iconImageSize: [30, 30],\r\n-                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n-                iconImageOffset: [-15, -15],\r\n-              }\r\n-            )\r\n-          );\r\n-        });\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-const mapSelfInit = (data) =>\r\n-  $(document).ready(function () {\r\n-    // Карта на странице контактов\r\n-    const isMapContacts = $(\"div\").is(\"#mapSelf\");\r\n-\r\n-    if (isMapContacts) {\r\n-      console.log(\"Нашел контейнер\", \"#mapSelf\");\r\n-\r\n-      ymaps.ready(mapSelfInit);\r\n-\r\n-      function mapSelfInit() {\r\n-        // Создание карты.\r\n-        var myMap = new ymaps.Map(\"mapSelf\", {\r\n-          // Координаты центра карты.\r\n-          // Порядок по умолчанию: «широта, долгота».\r\n-          // Чтобы не определять координаты центра карты вручную,\r\n-          // воспользуйтесь инструментом Определение координат.\r\n-          center: [data[0].lat, data[0].lon],\r\n-          // Уровень масштабирования. Допустимые значения:\r\n-          // от 0 (весь мир) до 19.\r\n-          zoom: 17,\r\n-          maxZoom: 1,\r\n-          controls: [],\r\n-        });\r\n-\r\n-        data.forEach((element) => {\r\n-          console.log(element);\r\n-          myMap.geoObjects.add(\r\n-            new ymaps.Placemark(\r\n-              [element.lat, element.lon],\r\n-              {\r\n-                hintContent: element.title,\r\n-              },\r\n-              {\r\n-                // Необходимо указать данный тип макета.\r\n-                iconLayout: \"default#imageWithContent\",\r\n-                // Своё изображение иконки метки.\r\n-                // iconImageHref: 'assets/icons/placeMark2.svg',\r\n-                iconImageHref: \"/static/assets/icons/placeMark2.svg\",\r\n-                // Размеры метки.\r\n-                iconImageSize: [60, 60],\r\n-                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n-                iconImageOffset: [-30, -50],\r\n-              }\r\n-            )\r\n-          );\r\n-        });\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-// mapInit(x);\r\n-\r\n-// mapSelfInit(y);\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-// =================================================================================================================================\r\n-// =================================================================================================================================\r\n-\r\n-function showFile(input) {\r\n-  let file = input.files[0];\r\n-  $(\".header-callback__load-file__desc\").text(`${file.name}`);  \r\n-}\r\n-\r\n-function fileNameClear() {\r\n-  // $(\".header-callback__load-file__desc\").text(`Прикрепить резюме`);  \r\n-  setTimeout($(\".header-callback__load-file__desc\").text(`Прикрепить резюме`), 1000);\r\n-}\r\n-\r\n-// const fileNameClearqwqw = setTimeout(fileNameClear, 1000)\r\n- \n\\ No newline at end of file\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1623940214891,
            "name": "Commit-0",
            "content": "// console.log(\"Файл map.scss подключен\");\r\n\r\n// document.querySelector('.btn').onclick = loader;\r\n\r\n/*====================================\r\n*     Yandex Map\r\n======================================*/\r\n// Функция ymaps.ready() будет вызвана, когда\r\n// загрузятся все компоненты API, а также когда будет готово DOM-дерево.\r\n// const x = [{\r\n//         title: \"Хьюстон\",\r\n//         lat: 29.766892,\r\n//         lon: -95.342553\r\n//     },\r\n//     {\r\n//         title: \"Ноябрьск\",\r\n//         lat: 63.189667,\r\n//         lon: 75.461747\r\n//     },\r\n//     {\r\n//         title: \"Москва\",\r\n//         lat: 55.661574,\r\n//         lon: 37.573856\r\n//     },\r\n// ];\r\n// const y = [\r\n//       {\r\n//           \"lat\": 63.197546,\r\n//           \"lon\": 75.511242,\r\n//       }\r\n//   ]\r\n// ;\r\n\r\nconst mapInit = (data) =>\r\n  $(document).ready(function () {\r\n    // Проверка наличия карты на странице\r\n    const isMapContainer = $(\"div\").is(\"#map\");\r\n    \r\n\r\n    if (isMapContainer) {\r\n      console.log(\"Нашел контейнер\", \"#map\");\r\n      ymaps.ready(init);\r\n\r\n      function init() {\r\n        // Создание карты.\r\n        var myMap = new ymaps.Map(\"map\", {\r\n          // Координаты центра карты.\r\n          // Порядок по умолчанию: «широта, долгота».\r\n          // Чтобы не определять координаты центра карты вручную,\r\n          // воспользуйтесь инструментом Определение координат.\r\n          center: [35.0, 10.0],\r\n          // Уровень масштабирования. Допустимые значения:\r\n          // от 0 (весь мир) до 19.\r\n          zoom: 1.5,\r\n          maxZoom: 1,\r\n\r\n          type: \"yandex#satellite\",\r\n\r\n          controls: [],\r\n        }, {\r\n          // Зададим ограниченную область прямоугольником,           \r\n          restrictMapArea: [\r\n              [85.000000, -179.000000],\r\n              [-85.000000, 179.000000]\r\n          ]\r\n        });\r\n\r\n        data.forEach((element) => {\r\n          console.log(element, \"element\");\r\n          myMap.geoObjects.add(\r\n            new ymaps.Placemark(\r\n              [element.lat, element.lon],\r\n              {\r\n                hintContent: element.title,\r\n              },\r\n              {                \r\n                // Необходимо указать данный тип макета.\r\n                iconLayout: \"default#imageWithContent\",\r\n                // Своё изображение иконки метки.\r\n                // iconImageHref: 'assets/icons/placeMark.svg',\r\n                iconImageHref: \"/static/assets/icons/placeMark.svg\",\r\n\r\n                // Размеры метки.\r\n                iconImageSize: [30, 30],\r\n                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n                iconImageOffset: [-15, -15],\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\nconst mapSelfInit = (data) =>\r\n  $(document).ready(function () {\r\n    // Карта на странице контактов\r\n    const isMapContacts = $(\"div\").is(\"#mapSelf\");\r\n\r\n    if (isMapContacts) {\r\n      console.log(\"Нашел контейнер\", \"#mapSelf\");\r\n\r\n      ymaps.ready(mapSelfInit);\r\n\r\n      function mapSelfInit() {\r\n        // Создание карты.\r\n        var myMap = new ymaps.Map(\"mapSelf\", {\r\n          // Координаты центра карты.\r\n          // Порядок по умолчанию: «широта, долгота».\r\n          // Чтобы не определять координаты центра карты вручную,\r\n          // воспользуйтесь инструментом Определение координат.\r\n          center: [data[0].lat, data[0].lon],\r\n          // Уровень масштабирования. Допустимые значения:\r\n          // от 0 (весь мир) до 19.\r\n          zoom: 17,\r\n          maxZoom: 1,\r\n          controls: [],\r\n        });\r\n\r\n        data.forEach((element) => {\r\n          console.log(element);\r\n          myMap.geoObjects.add(\r\n            new ymaps.Placemark(\r\n              [element.lat, element.lon],\r\n              {\r\n                hintContent: element.title,\r\n              },\r\n              {\r\n                // Необходимо указать данный тип макета.\r\n                iconLayout: \"default#imageWithContent\",\r\n                // Своё изображение иконки метки.\r\n                // iconImageHref: 'assets/icons/placeMark2.svg',\r\n                iconImageHref: \"/static/assets/icons/placeMark2.svg\",\r\n                // Размеры метки.\r\n                iconImageSize: [60, 60],\r\n                // Смещение слоя с содержимым относительно слоя с картинкой.\r\n                iconImageOffset: [-30, -50],\r\n              }\r\n            )\r\n          );\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n// mapInit(x);\r\n\r\n// mapSelfInit(y);\r\n\r\n\r\n\r\n\r\n\r\n// =================================================================================================================================\r\n// =================================================================================================================================\r\n\r\nfunction showFile(input) {\r\n  let file = input.files[0];\r\n  $(\".header-callback__load-file__desc\").text(`${file.name}`);  \r\n}\r\n\r\nfunction fileNameClear() {\r\n  // $(\".header-callback__load-file__desc\").text(`Прикрепить резюме`);  \r\n  setTimeout($(\".header-callback__load-file__desc\").text(`Прикрепить резюме`), 1000);\r\n}\r\n\r\n// const fileNameClearqwqw = setTimeout(fileNameClear, 1000)\r\n "
        }
    ]
}